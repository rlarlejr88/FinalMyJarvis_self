<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.iei.company.model.dao.CompanyDao">
  
  <!-- 아래 필터 관련 where 부분 구문 -->
  <sql id="searchFilterCondition">
  	<where>
  		<if test="memberId != null and memberId != ''">
            AND M.MEMBER_ID = #{memberId}
        </if>
  		<if test="type != null and type != '' and type != 'ALL'">
  			AND C.COMP_TYPE = #{type}
  		</if>
  		<if test="status > 0">
  			AND C.TRADE_STATUS = #{status}
  		</if>
  		<if test="search != null and search != ''">
  			AND C.COMP_NAME LIKE '%' || #{search} || '%'
  		</if>  		
  	</where>
  </sql>
  
  <!-- 전체 고객사 수 조회 -->
  <select id="selectCompanyCount" resultType="_int">
  select count(*)
    from tbl_company C 
    JOIN TBL_MEMBER M ON C.MEMBER_NO = M.MEMBER_NO
  	<include refid="searchFilterCondition" />
  </select>
  
  <!-- 전체 고객사 목록 조회 -->
  <select id="selectCompanyList" parameterType="map" resultType="Company">
    SELECT * FROM (
        SELECT ROWNUM AS RNUM, C_INNER.* FROM (
          
            SELECT 
                c.COMP_CD        AS compCd,
                c.MEMBER_NO      AS memberNo,
                c.COMP_NAME      AS compName,
                c.COMP_TEL       AS compTel,
                c.COMP_ADDR      AS compAddr,
                c.OWNER_NAME     AS ownerName,
                c.TRADE_STATUS   AS tradeStatus,
                c.COMP_TYPE      AS compType,
                c.COMP_NO        AS compNo,
                TO_CHAR(c.REG_DATE, 'YYYY-MM-DD') AS regDate
            FROM TBL_COMPANY C            
            JOIN TBL_MEMBER M 
              ON C.MEMBER_NO = M.MEMBER_NO            
            <include refid="searchFilterCondition" />           
            ORDER BY
            <choose>
                <when test="sortKey == 'compName'">C.COMP_NAME ${sortDirection}</when>
                <when test="sortKey == 'tradeStatus'">C.TRADE_STATUS ${sortDirection}</when>
                <otherwise>C.REG_DATE ${sortDirection}</otherwise>
            </choose>
        ) C_INNER
    ) 
    WHERE RNUM BETWEEN #{pageInfo.start} AND #{pageInfo.end}
  </select> 
  
  
  <!-- company 신규 가입 -->
  <insert id="insertCompany" parameterType="kr.or.iei.company.model.dto.Company">
    <selectKey keyProperty="compCd" resultType="string" order="BEFORE">
     SELECT 'COMP' || LPAD(SEQ_TBL_COMPANY_CD.NEXTVAL, 4, '0') FROM DUAL
    </selectKey>
  	insert into tbl_company
  		(
  		COMP_CD, 
  		MEMBER_NO, 
  		COMP_NAME, 
  		COMP_TEL,
  		COMP_ADDR,
  		OWNER_NAME,  
  		COMP_TYPE,  
  		COMP_NO,   
  		REG_DATE
  		)
  	values
  		(
  		#{compCd},
  		#{memberNo},
  		#{compName},
  		#{compTel},
  		#{compAddr},
  		#{ownerName},
  		#{compType},
  		#{compNo},
  		sysdate
  		)  		
  </insert>
  
  <!-- company 담당자 신규 등록 -->
  <insert id="insertCompanyMember" parameterType="kr.or.iei.company.model.dto.CompanyMember">
    INSERT INTO TBL_COMPANY_MEMBER (
        CONTACT_IDX, 
        COMP_CD, 
        MEMBER_NO, 
        CONTACT_NAME, 
        CONTACT_EMAIL, 
        CONTACT_PHONE, 
        IS_MAIN_CONTACT, 
        CONTACT_POSITION, 
        CONTACT_DEPT, 
        REG_DATE
    ) VALUES (
        'CM_' || LPAD(SEQ_TBL_COMPANY_MEMBER_IDX.NEXTVAL, 4, '0'), -- PK 형식 맞추기 (예: CM_0001)
        #{compCd},
        #{memberNo},
        #{contactName},
        #{contactEmail},
        #{contactPhone}, 
        'N',        
        #{contactPosition},
        #{contactDept},
        SYSDATE
    )
	</insert>
	
	<!-- 고객사 조회 -->
	<select id="searchCompanyByName" parameterType="string" resultType="Company">
    SELECT COMP_CD AS compCd,
	       COMP_NAME AS compName,
	       OWNER_NAME AS ownerName,
	       COMP_TEL AS compTel,
	       COMP_NO AS compNo		             
      FROM TBL_COMPANY C
      JOIN TBL_MEMBER M ON C.MEMBER_NO = M.MEMBER_NO
     WHERE M.MEMBER_ID = #{memberId}
           and COMP_NAME LIKE '%' || #{searchName} || '%'
	</select>
	
	<!-- 고객사 멤버 조회 -->
	<select id="selectCompanyMembers" resultType="kr.or.iei.company.model.dto.CompanyMember">
    SELECT
        CONTACT_IDX AS contactIdx,
        COMP_CD AS compCd,
        MEMBER_NO AS memberNo,
        CONTACT_NAME AS contactName,
        CONTACT_EMAIL AS contactEmail,
        CONTACT_PHONE AS contactPhone,
        IS_MAIN_CONTACT AS isMainContact,
        CONTACT_POSITION AS contactPosition,
        CONTACT_DEPT AS contactDept,
        TO_CHAR(REG_DATE, 'YYYY-MM-DD') AS regDate
    FROM TBL_COMPANY_MEMBER
    WHERE COMP_CD = #{compCd}
    ORDER BY IS_MAIN_CONTACT DESC, REG_DATE ASC
	</select>
	
	<select id="findCompCdByMemberNo" parameterType="string" resultType="string">
    SELECT COMP_CD 
    FROM TBL_COMPANY 
    WHERE MEMBER_NO = #{memberNo} AND ROWNUM = 1
	</select>
	
	<!-- 고객사 상세 조회 -->
	<select id="selectOneCompany" parameterType="string" resultType="Company">
        SELECT 
            COMP_CD        AS compCd,
            MEMBER_NO      AS memberNo,
            COMP_NAME      AS compName,
            COMP_TEL       AS compTel,
            COMP_ADDR      AS compAddr,
            OWNER_NAME     AS ownerName,
            TRADE_STATUS   AS tradeStatus,
            COMP_TYPE      AS compType,
            COMP_NO        AS compNo,
            TO_CHAR(REG_DATE, 'YYYY-MM-DD') AS regDate
        FROM TBL_COMPANY
        WHERE COMP_CD = #{compCd}
    </select>
    
    <!-- 고객사 수정 -->
    <update id="updateCompany" parameterType="Company">
        UPDATE TBL_COMPANY
        SET
            COMP_NAME = #{compName},
            OWNER_NAME = #{ownerName},
            COMP_TEL = #{compTel},
            COMP_ADDR = #{compAddr},
            COMP_TYPE = #{compType},
            COMP_NO = #{compNo}
        WHERE COMP_CD = #{compCd}
    </update>
	
	<!-- 담당자 삭제 -->
    <delete id="deleteCompanyMembers" parameterType="string">
        DELETE FROM TBL_COMPANY_MEMBER
        WHERE COMP_CD = #{compCd}
    </delete>
	
	<!-- 고객사 비활성화 처리 -->
    <update id="deactivateCompany" parameterType="string">
        UPDATE TBL_COMPANY
        SET
            TRADE_STATUS = 2
        WHERE COMP_CD = #{compCd}
    </update>
  
</mapper>
